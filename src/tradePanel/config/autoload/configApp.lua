--- Application config

return {
    dependencies = {
        -- по умолчанию использовать уже загруженные сервисы
        shared_by_default = true,

        -- фабрики
        factories = {
               ["Config_ratio"] = function(container)
                local ratio = container:get("config").tradeRatio

                if is_nil(ratio) then
                    error("\r\n\r\n" .. "Error: В (configApp.lua) отсутствует параметр - (ratio)")
                end

                if not_number(ratio) then
                    error("\r\n\r\n" .. "Error: В (configApp.lua) параметр (tradeRatio) должен быть числом.")
                end

                if ratio < 1 then
                    error("\r\n\r\n" .. "Error: В (configApp.lua) параметр (tradeRatio) не может быть меньше 1.")
                end

                return ratio
            end
        },

        -- алиасы
        aliases = {
            --["App"] = "Application"
        },

        -- сервисы
        services = {
            --ff = function()
            --	dd("отработала функция из контейнера")
            --end
        },

        -- false - при каждом вызове сервиса загружать его заново
        shared = {
            ["Queue"] = false,
        },
    },

    -- используется при сравнении (maxLots) и (lots) для увеличения количества
    -- лотов: if (maxLots) < (lots * ratio) then ...
    -- может быть равен или больше 1
    tradeRatio = 1.1, -- 110%

    -- настройки запросов, стопов, тейков - идёт от базовой цены (цены уровня)

    -- люфт (стоп) для StopOrderLimit
    -- 2% интервала от цены запроса
    zaprosOffset = {
        -- отступ 2 шага
        buy = {
            [0] = 3,
            [5] = 7,
            [10] = 12,

            [105] = -2,
            [110] = -7,
        },
        sell = {
            [0] = -3,
            [5] = -7,
            [10] = -12,

            [105] = 2,
            [110] = 7,
        },
        offset = {
            buy = 2,
            sell = -2
        }
    },

    -- измеряется в 1/10 части от шага интервала
    zapros = {
        buy = {
            [0] = 1,
            [5] = 5,
            [10] = 10,

            --[105] = -4,
            --[110] = -9,
        },
        sell = {
            [0] = -1,
            [5] = -5,
            [10] = -10,

            --[105] = 4,
            --[110] = 9,
        }
    },

    stop = {
        -- zapros.buy[5] - stop.buy[5]
        buy = {
            --[0] = -11,
            --[5] = -6,
            --[10] = -1,

            [0] = -11,
            [5] = -11,
            [10] = -1,

            --[105] = -15,
            --[110] = -20,
        },
        sell = {
            --[0] = 11,
            --[5] = 6,
            --[10] = 1,

            [0] = 11,
            [5] = 11,
            [10] = 1,

            --[105] = 15,
            --[110] = 20,
        },
        size = {
            buy = -11,
            sell = 11,
            default = 11,
        },
    },

    -- на 2% больше (zapros) чтобы отбить комиссию
    stopMove = {
        buy = {
            [0] = 3,
            [5] = 7,
            [10] = 12,

            [105] = -2,
            [110] = -7,
        },
        sell = {
            [0] = -3,
            [5] = -7,
            [10] = -12,

            [105] = 2,
            [110] = 7,
        },
        size = {
            buy = 2,
            sell = -2,
            default = 2,
        },
    },

    -- измеряется в шагах от интервала (1/6 интервала)
    take = {
        buy = {
            [2] = 2,
            [3] = 3,
            [4] = 4,
            [5] = 5,
            [6] = 6,
            [7] = 7,
            [8] = 8,
            [9] = 9,
            [10] = 10,
        },
        sell = {
            [2] = -2,
            [3] = -3,
            [4] = -4,
            [5] = -5,
            [6] = -6,
            [7] = -7,
            [8] = -8,
            [9] = -9,
            [10] = -10,
        },
        -- измеряется в части шага интервала
        -- 1/10 часть шага, 1/60 часть от интервала
        -- коррелирует с размером запроса 1:1, 2:2
        offsetPartStepInterval = 1,
    },

    -- выставлять тейк или нет при выставлении стопа
    takeStatus = true,

    -- размер тейка по умолчанию (допустимые значения: 2, 3, 4, 5, 6)
    -- измеряется в шагах интервала (1/6 от интервала)
    selectSize = 2,

}

